name: Github pages deployer

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # build job
  build:
    name: Build tailwind
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code 🛎️
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Pages ⚙️
        uses: actions/configure-pages@v5

      - name: install bun 🔩
        run: curl -fsSL https://bun.sh/install | bash

      - name: Build 🔧
        run: |
          cat tailwind.css custom.css > tailwind.temp.css
          ~/.bun/bin/bun x tailwindcss@experimental -i tailwind.temp.css -o build.css -m

      - name: Remove dev css links 🔪
        run: |
          sed -i 's|<link href="custom.css" rel="stylesheet">||g' *.html
          sed -i "s|build.css|build.css?v=$(git log --format="%h" -n 1)|g" *.html

      - name: Upload artifact 🚀
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages 🚀
        id: deployment
        uses: actions/deploy-pages@v2